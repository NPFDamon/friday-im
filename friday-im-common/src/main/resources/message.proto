syntax = "proto3";
package proto;

option java_package = "com.friday.common.protobuf";
option java_outer_classname = "Message";

message FridayMessage{
  Type type = 1;
  //oneof的意思：如果有多个可选字段，在某一个时刻只能只有一个值被设置，可以节省内存空间
  oneof data {
    Login login = 2;
    LoginAck loginAck = 3;
    ServerInfo serverInfo = 4;
    UpDownMessage upDownMessage = 5;
    HeartBeat heartBeat = 6;
    MessageAck messageAck = 7;
    HisMessagesReq hisMessagesReq = 8;
    HisMessagesAck hisMessagesAck = 9;
    NotifyMessage notifyMessage = 10;
    ConverReq converReq = 11;
    ConverAck converAck = 12;
  }

  enum Type {
    Login = 0;
    LoginAck = 1;
    ServerInfo = 2;
    UpDownMessage = 3;
    HeartBeat = 4;
    MessageAck = 5;
    HisMessagesReq = 6;
    HisMessagesAck = 7;
    NotifyMessage = 8;
    ConverReq = 9;
    ConverAck = 10;
  }
}
//上下行消息
message UpDownMessage {
  uint64 requestId = 1;//服务消息ID
  uint64 cid = 2; //客户端ID
  string fromUid = 3;//发送人ID
  string toUid = 4;//接收人ID
  string groupId = 5;//群ID
  string converId = 6;//会话ID
  MessageContent content = 7;//消息内容
  ConverType converType = 8;//请求类型

}
//消息详情
message MessageContent{
  uint64 id = 1;//消息ID
  string uid = 2;//发送方ID
  MessageType type = 3;//消息类型
  string content = 4;//消息内容
  uint64 time = 5;//消息时间
}
//消息类型
enum MessageType{
  TEXT = 0;
  PICTURE = 1;
  VOICE = 2;
  VIDEO = 3;
}
//会话类型
enum ConverType{
  SINGLE = 0;//单聊
  GROUP = 1;//群聊
  NOTIFY = 2;//通知
}

enum Code{
  SUCCESS = 0;//成功
  CLIENT_ID_REPEAT = 1;
  CONVER_TYPE_INVALID = 2;
  KAFKA_ERROR = 3;
  CONVER_ID_INVALID = 4;
  TOKEN_INVALID = 5;
  OPERATION_TYPE_INVALID = 6;
  NO_TARGET = 7;
}
// 心跳
message HeartBeat {
  uint64 id = 1; // 消息ID
  HeartBeatType heartBeatType = 2;
}

enum HeartBeatType {
  PING = 0;
  PONG = 1;
}


message Login{
  uint64 id = 1;//消息ID
  string uid = 2;//uid
  string token = 3;//token
}

message LoginAck{
  uint64 id = 1;//消息id
  Code code = 2;//返回码
  string msg = 3;//返回信息
  uint64 time = 4;
}

message ServerInfo{
  uint64 id = 1;
  string ip = 2;
  uint32 port = 3;
}

//通知信息
message NotifyMessage{
  uint64 id = 1;//消息ID
  string type = 2;//通知类型
  string targetUid = 3;//接收id
  string content = 4;//消息内容
  uint64 time = 5;//时间
}

/**
****************
 */


// 消息ACK
message MessageAck {
  uint64 id = 1; // 服务端消息ID
  uint64 cid = 2; // 客户端消息ID
  string targetUid = 3; // 接收人ID
  string converId = 4; // 会话id
  uint64 time = 5; // 发送时间
  Code code = 6; // 返回码
}

// 历史消息请求
message HisMessagesReq {
  uint64 id = 1; // 消息ID 客户端生成
  string converId = 2; // 会话id
  uint64 beginId = 3; // 消息起始id
}

// 历史消息响应
message HisMessagesAck {
  uint64 id = 1; // 消息ID  客户端生成
  string converId = 2; // 会话id
  repeated MessageContent messageList = 3; // 消息列表
  uint64 unReadCount = 4; // 历史消息未读数
}

// 会话操作请求  消息ID使用客户端生成
message ConverReq {
  uint64 id = 1; // 消息ID
  OperationType type = 2;
  string conversationId = 3; // 会话ID
}

enum OperationType {
  DETAIL = 0;
  ALL = 1;
}

// 会话操作结果
message ConverAck {
  uint64 id = 1; // 消息ID
  Code code = 3; // 返回码
  uint64 time = 4; // 时间
  ConverInfo converInfo = 5;
  repeated ConverInfo converList = 6;
}

// 会话详情
message ConverInfo {
  string converId = 1; // 会话ID
  ConverType type = 2; // 会话类型
  repeated string uidList = 3; // 单聊会话 用户列表
  string groupId = 4; //  群会话 群ID
  uint64 readMsgId = 5; // 已读消息ID
  MessageContent lastContent = 6; // 最后一条消息
}
